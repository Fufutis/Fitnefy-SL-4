/****************************************
 * 1) Body and Global Resets
 ****************************************/
 body {
    margin: 0;             /* Ensure no default margin around body */
    padding-top: 50px;     /* Adjust if you have a fixed navbar of height ~50px */
    font-family: sans-serif; /* Optional */
    background-color: black; /* Fallback background if needed */
}

/****************************************
 * 2) BACKGROUND TILE STYLES
 ****************************************/
.bg-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    z-index: 0; /* Sits behind main content */
}

.tile {
    width: 5rem;
    height: 5rem;
    transition: 3s;
    background: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgb(0, 0, 0) 100%);
    opacity: 0.2;
}

.tile:hover {
    transition: none;
    opacity: 0.8;
    filter: hue-rotate(90deg);
}

.tile:active {
    filter: hue-rotate(-90deg);
}

/****************************************
 * 3) MAIN CONTENT
 ****************************************/
/* If you want the tiles to be hoverable where there's no content,
   but also let the user interact with the main content, do this:
 */  
   .main-content {
       position: relative;
       z-index: 1;
       width: 100%;
       height: 100%;
       display: flex;
       align-items: center;
       justify-content: center;
       /* background-color: rgba(0, 0, 0, 0.5);  Optional overlay 
   */}/*
   (No pointer-events: none, so the user can click inside .main-content)
*/

/* If you prefer to let hovers pass through .main-content to the tiles,
   you need pointer-events: none. But that also stops ANY click in .main-content.
   To fix, re-enable pointer-events for child elements:
*/
.main-content {
    position: relative;
    z-index: 1;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;

    /* Let hover pass through to background. */
    pointer-events: none;
}

/* Now re-enable clicks & hovers for *inside* the main-content */
.main-content * {
    pointer-events: auto;
}

/****************************************
 * 5) BUTTON STYLES
 ****************************************/
.button {
    background-color: #337a68;
    border-color: aquamarine;
}

.button:hover{
    background-color: #8EB69B;

    box-shadow:0px 0px 20px 5px aquamarine;
}
.button:hover:active{
    background-color: #DAF1D3;

    
}

/* Custom Button Styles */
.custom-btn-success {
    display: inline-block;
    font-weight: 450;
    color: rgb(127, 255, 170); /* Custom green color */
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
    cursor: pointer;
    background-color: transparent;
    border: 1px solid rgb(127, 255, 170); /* Outline color */
    padding: 0.375rem 0.75rem; /* Spacing inside the button */
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 0.375rem; /* Rounded corners */
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
        border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}


.custom-btn-success:hover {
    color: #fff; /* Text color changes to white */
    background-color: #239c78; /* Background color becomes success green */
    border-color: #198766; /* Border remains success green */
}

.custom-btn-success:focus {
    color: #fff;
    background-color: #239c78;
    border-color: #198766;
    box-shadow:0px 0px 12px 8px #198766;
}
.bg-nav{
    background-color: #051F20;
    color: #DAF1D3;
}